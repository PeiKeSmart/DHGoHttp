name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build (host env)
        run: go build -v ./...
      - name: Go Vet
        run: go vet ./...
      - name: Staticcheck
        uses: dominikh/staticcheck-action@v1
        with:
          version: latest
      - name: Test (no tests yet)
        run: echo "No tests yet"

  release-matrix:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        goos: [windows, linux, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm64 # remove if Apple Silicon wanted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          outName=dhgohttp-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then outName="$outName.exe"; fi
          go build -ldflags "-s -w" -o "$outName" .
          shasum -a 256 "$outName" > "$outName".sha256
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dhgohttp-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            dhgohttp-${{ matrix.goos }}-${{ matrix.goarch }}*
